openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
  description: API to manage users

servers:
  - url: http://localhost:3000/api/mock
    description: Development server

paths:
  /users:
    get:
      summary: Get all users
      parameters:
        - name: search
          in: query
          description: Search keyword to filter users
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter users by status
          required: false
          schema:
            type: string
            enum: [ACTIVE, INACTIVE]
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                      format: email
                    status:
                      type: string
                      enum: [ACTIVE, INACTIVE]
              examples:
                allUsers:
                  summary: A list of users
                  value:
                    - id: "1"
                      firstName: "Alice"
                      lastName: "Smith"
                      email: "alice@example.com"
                      status: "ACTIVE"
                    - id: "2"
                      firstName: "Bob"
                      lastName: "Johnson"
                      email: "bob@example.com"
                      status: "INACTIVE"
                activeUsers:
                  summary: active users
                  value:
                    - id: "1"
                      firstName: "Alice"
                      lastName: "Smith"
                      email: "alice@example.com"
                      status: "ACTIVE"
                inactiveUsers:
                  summary: inactive users
                  value:
                    - id: "2"
                      firstName: "Bob"
                      lastName: "Johnson"
                      email: "bob@example.com"
                      status: "INACTIVE"                                                                   

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                    format: email
                  status:
                    type: string
                    enum: [ACTIVE, INACTIVE]

  /users/{userId}:
    patch:
      summary: Update a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
                status:
                  type: string
                  enum: [ACTIVE, INACTIVE]
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                    format: email
                  status:
                    type: string
                    enum: [ACTIVE, INACTIVE]